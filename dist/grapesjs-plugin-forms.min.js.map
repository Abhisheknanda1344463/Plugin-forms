{"version":3,"sources":["webpack://grapesjs-plugin-forms/webpack/universalModuleDefinition","webpack://grapesjs-plugin-forms/webpack/bootstrap","webpack://grapesjs-plugin-forms/./node_modules/@babel/runtime/helpers/defineProperty.js","webpack://grapesjs-plugin-forms/./src/traits.js","webpack://grapesjs-plugin-forms/./src/blocks.js","webpack://grapesjs-plugin-forms/./src/components.js","webpack://grapesjs-plugin-forms/./src/index.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","obj","configurable","writable","editor","trm","TraitManager","textTrat","getType","addType","events","onValueChange","md","this","model","target","set","getInputEl","inputEl","options","trim","split","optComps","length","option","opt","tagName","attributes","content","push","reset","view","render","$input","trg","optionsStr","models","optValue","document","createElement","bm","BlockManager","blocks","indexOf","add","label","labelForm","category","labelInputName","labelTextareaName","labelSelectName","labelSelectOption","labelOption","labelButtonName","labelNameLabel","labelCheckboxName","class","labelRadioName","domc","DomComponents","defaultType","textType","defaultModel","defaultView","textModel","textView","formMsgSuccess","formMsgError","idTrait","labelTraitId","forTrait","labelTraitFor","nameTrait","labelTraitName","placeholderTrait","labelTraitPlaceholder","valueTrait","labelTraitValue","requiredTrait","type","labelTraitRequired","checkedTrait","labelTraitChecked","preventDefaultClick","extend","handleClick","e","preventDefault","defaults","droppable","icon","method","redirect","draggable","traits","labelTraitdefaultName","placeholder","labelTraitMethod","labelTraitAction","labelTraitState","changeProp","labelStateNormal","labelStateSuccess","labelStateError","init","listenTo","updateFormState","showState","state","failVis","successVis","st","successModel","getStateModel","failModel","successStyle","getStyle","failStyle","display","setStyle","stateModel","comps","contentStr","removable","copyable","isComponent","el","submit","labelTraitType","labelTypeText","labelTypeEmail","labelTypePassword","labelTypeNumber","inputType","inputModel","labelTraitOptions","handleChecked","checked","checkType","text","components","tChild","chCnt","is","on","__onTextChange","click","opts","config","labelTypeSubmit","labelTypeReset","labelTypeButton","labelTraitRedirect","loadComponents","loadTraits","loadBlocks"],"mappings":"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","file":"dist/grapesjs-plugin-forms.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"grapesjs-plugin-forms\"] = factory();\n\telse\n\t\troot[\"grapesjs-plugin-forms\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty;","export default function (editor, opt = {}) {\n  const trm = editor.TraitManager;\n  const textTrat = trm.getType('text');\n\n  trm.addType('content', {\n    events:{\n      'keyup': 'onChange',\n    },\n\n    onValueChange: function () {\n      var md = this.model;\n      var target = md.target;\n      target.set('content', md.get('value'));\n    },\n\n    getInputEl: function() {\n      if(!this.inputEl) {\n        this.inputEl = textTrat.prototype.getInputEl.bind(this)();\n        this.inputEl.value = this.target.get('content');\n      }\n      return this.inputEl;\n    }\n  });\n\n\n  trm.addType('select-options', {\n    events:{\n      'keyup': 'onChange',\n    },\n\n    onValueChange: function () {\n      var optionsStr = this.model.get('value').trim();\n      var options = optionsStr.split('\\n');\n      var optComps = [];\n\n      for (var i = 0; i < options.length; i++) {\n        var optionStr = options[i];\n        var option = optionStr.split('::');\n        var opt = {\n          tagName: 'option',\n          attributes: {}\n        };\n        if(option[1]) {\n          opt.content = option[1];\n          opt.attributes.value = option[0];\n        } else {\n          opt.content = option[0];\n          opt.attributes.value = option[0];\n        }\n        optComps.push(opt);\n      }\n\n      var comps = this.target.get('components');\n      comps.reset(optComps);\n      this.target.view.render();\n    },\n\n    getInputEl: function() {\n      if (!this.$input) {\n        var md = this.model;\n        var trg = this.target;\n        var name = md.get('name');\n        var optionsStr = '';\n        var opts = {placeholder: ''};\n        var options = trg.get('components');\n\n        for (var i = 0; i < options.length; i++) {\n          var option = options.models[i];\n          var optAttr = option.get('attributes');\n          var optValue = optAttr.value || '';\n          optionsStr += `${optValue}::${option.get('content')}\\n`;\n        }\n\n        this.$input = document.createElement('textarea');\n        this.$input.value = optionsStr;\n      }\n      return this.$input;\n  \t},\n  });\n}\n","  export default function (editor, opt = {}) {\n  const c = opt;\n  let bm = editor.BlockManager;\n\n  if (c.blocks.indexOf('form') >= 0) {\n    bm.add('form', {\n      label: `\n      <svg class=\"gjs-block-svg\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path class=\"gjs-block-svg-path\" d=\"M22,5.5 C22,5.2 21.5,5 20.75,5 L3.25,5 C2.5,5 2,5.2 2,5.5 L2,8.5 C2,8.8 2.5,9 3.25,9 L20.75,9 C21.5,9 22,8.8 22,8.5 L22,5.5 Z M21,8 L3,8 L3,6 L21,6 L21,8 Z\" fill-rule=\"nonzero\"></path>\n        <path class=\"gjs-block-svg-path\" d=\"M22,10.5 C22,10.2 21.5,10 20.75,10 L3.25,10 C2.5,10 2,10.2 2,10.5 L2,13.5 C2,13.8 2.5,14 3.25,14 L20.75,14 C21.5,14 22,13.8 22,13.5 L22,10.5 Z M21,13 L3,13 L3,11 L21,11 L21,13 Z\" fill-rule=\"nonzero\"></path>\n        <rect class=\"gjs-block-svg-path\" x=\"2\" y=\"15\" width=\"10\" height=\"3\" rx=\"0.5\"></rect>\n      </svg>\n      <div class=\"gjs-block-label\">${c.labelForm}</div>`,\n      category: c.category,\n      content: `\n        <form class=\"form\">\n          <div class=\"form-group\" data-gjs-type=\"form group\">\n            <label class=\"label\">Name</label>\n            <input type=\"text\" placeholder=\"Type your name here\" name=\"firstname\" class=\"input\"/>\n          </div>\n          <div class=\"form-group\" data-gjs-type=\"form group\">\n            <label class=\"label\">Email</label>\n            <input type=\"email\" placeholder=\"Type your email here\" name=\"email\" class=\"input\"/>\n          </div>\n          <div class=\"form-group\" data-gjs-type=\"form group\">\n            <label class=\"label\">Options</label>\n            <select type=\"text\" name=\"options\" class=\"select\"><option value=\"1\">Option 1</option><option value=\"2\">Option 2</option><option value=\"3\">Option 3</option></select>\n          </div>\n          <div class=\"form-group\" data-gjs-type=\"form group\">\n            <label class=\"label\">Gender</label>\n            <input type=\"radio\" name=\"gender\" value=\"M\" class=\"radio\"/>\n            <label class=\"radio-label\">Male</label>\n            <input type=\"radio\" name=\"gender\" value=\"F\" class=\"radio\"/>\n            <label class=\"radio-label\">Female</label>\n          </div>\n          <div class=\"form-group\" data-gjs-type=\"form group\">\n            <label class=\"label\">Message</label>\n            <textarea name=\"message\" class=\"textarea\"></textarea>\n          </div>\n          <div class=\"form-group\" data-gjs-type=\"form group\">\n            <button type=\"submit\" class=\"button\">Send</button>\n          </div>\n        </form>\n      `,\n    });\n  }\n\n  if (c.blocks.indexOf('input') >= 0) {\n    bm.add('input', {\n      label: `\n      <svg class=\"gjs-block-svg\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path class=\"gjs-block-svg-path\" d=\"M22,9 C22,8.4 21.5,8 20.75,8 L3.25,8 C2.5,8 2,8.4 2,9 L2,15 C2,15.6 2.5,16 3.25,16 L20.75,16 C21.5,16 22,15.6 22,15 L22,9 Z M21,15 L3,15 L3,9 L21,9 L21,15 Z\"></path>\n        <polygon class=\"gjs-block-svg-path\" points=\"4 10 5 10 5 14 4 14\"></polygon>\n      </svg>\n      <div class=\"gjs-block-label\">${c.labelInputName}</div>`,\n      category: c.category,\n      content: '<input class=\"input\"/>',\n    });\n  }\n\n  if (c.blocks.indexOf('textarea') >= 0) {\n    bm.add('textarea', {\n      label: `\n      <svg class=\"gjs-block-svg\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path class=\"gjs-block-svg-path\" d=\"M22,7.5 C22,6.6 21.5,6 20.75,6 L3.25,6 C2.5,6 2,6.6 2,7.5 L2,16.5 C2,17.4 2.5,18 3.25,18 L20.75,18 C21.5,18 22,17.4 22,16.5 L22,7.5 Z M21,17 L3,17 L3,7 L21,7 L21,17 Z\"></path>\n        <polygon class=\"gjs-block-svg-path\" points=\"4 8 5 8 5 12 4 12\"></polygon>\n        <polygon class=\"gjs-block-svg-path\" points=\"19 7 20 7 20 17 19 17\"></polygon>\n        <polygon class=\"gjs-block-svg-path\" points=\"20 8 21 8 21 9 20 9\"></polygon>\n        <polygon class=\"gjs-block-svg-path\" points=\"20 15 21 15 21 16 20 16\"></polygon>\n      </svg>\n      <div class=\"gjs-block-label\">${c.labelTextareaName}</div>`,\n      category: c.category,\n      content: '<textarea class=\"textarea\"></textarea>',\n    });\n  }\n\n  if (c.blocks.indexOf('select') >= 0) {\n    bm.add('select', {\n      label: `\n      <svg class=\"gjs-block-svg\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path class=\"gjs-block-svg-path\" d=\"M22,9 C22,8.4 21.5,8 20.75,8 L3.25,8 C2.5,8 2,8.4 2,9 L2,15 C2,15.6 2.5,16 3.25,16 L20.75,16 C21.5,16 22,15.6 22,15 L22,9 Z M21,15 L3,15 L3,9 L21,9 L21,15 Z\" fill-rule=\"nonzero\"></path>\n        <polygon class=\"gjs-block-svg-path\" transform=\"translate(18.500000, 12.000000) scale(1, -1) translate(-18.500000, -12.000000) \" points=\"18.5 11 20 13 17 13\"></polygon>\n        <rect class=\"gjs-block-svg-path\" x=\"4\" y=\"11.5\" width=\"11\" height=\"1\"></rect>\n      </svg>\n      <div class=\"gjs-block-label\">${c.labelSelectName}</div>`,\n      category: c.category,\n      content: `<select class=\"select\">\n        ${c.labelSelectOption ? `<option value=\"\">${c.labelSelectOption}</option>` : ''}\n        <option value=\"1\">${c.labelOption} 1</option>\n        </select>`,\n    });\n  }\n\n  if (c.blocks.indexOf('button') >= 0) {\n    bm.add('button', {\n      label: `\n      <svg class=\"gjs-block-svg\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path class=\"gjs-block-svg-path\" d=\"M22,9 C22,8.4 21.5,8 20.75,8 L3.25,8 C2.5,8 2,8.4 2,9 L2,15 C2,15.6 2.5,16 3.25,16 L20.75,16 C21.5,16 22,15.6 22,15 L22,9 Z M21,15 L3,15 L3,9 L21,9 L21,15 Z\" fill-rule=\"nonzero\"></path>\n        <rect class=\"gjs-block-svg-path\" x=\"4\" y=\"11.5\" width=\"16\" height=\"1\"></rect>\n      </svg>\n      <div class=\"gjs-block-label\">${c.labelButtonName}</div>`,\n      category: c.category,\n      content: '<button class=\"button\">Send</button>',\n    });\n  }\n\n  if (c.blocks.indexOf('label') >= 0) {\n    bm.add('label', {\n      label: `\n      <svg class=\"gjs-block-svg\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path class=\"gjs-block-svg-path\" d=\"M22,11.875 C22,11.35 21.5,11 20.75,11 L3.25,11 C2.5,11 2,11.35 2,11.875 L2,17.125 C2,17.65 2.5,18 3.25,18 L20.75,18 C21.5,18 22,17.65 22,17.125 L22,11.875 Z M21,17 L3,17 L3,12 L21,12 L21,17 Z\" fill-rule=\"nonzero\"></path>\n        <rect class=\"gjs-block-svg-path\" x=\"2\" y=\"5\" width=\"14\" height=\"5\" rx=\"0.5\"></rect>\n        <polygon class=\"gjs-block-svg-path\" fill-rule=\"nonzero\" points=\"4 13 5 13 5 16 4 16\"></polygon>\n      </svg>\n      <div class=\"gjs-block-label\">${c.labelNameLabel}</div>`,\n      category: c.category,\n      content: '<label class=\"label\">Label</label>',\n    });\n  }\n\n  if (c.blocks.indexOf('checkbox') >= 0) {\n    bm.add('checkbox', {\n      label: c.labelCheckboxName,\n      attributes: {class:'fa fa-check-square'},\n      category: c.category,\n      content: '<input type=\"checkbox\" class=\"checkbox\"/>',\n    });\n  }\n\n  if (c.blocks.indexOf('radio') >= 0) {\n    bm.add('radio', {\n      label: c.labelRadioName,\n      attributes: {class:'fa fa-dot-circle-o'},\n      category: c.category,\n      content: '<input type=\"radio\" class=\"radio\"/>',\n    });\n  }\n}\n","export default function(editor, opt = {}) {\n  const c = opt;\n  const domc = editor.DomComponents;\n  const defaultType = domc.getType('default');\n  const textType = domc.getType('text');\n  const defaultModel = defaultType.model;\n  const defaultView = defaultType.view;\n  const textModel = textType.model;\n  const textView = textType.view;\n\n  let stateNormal = 'Normal';\n  let stateSuccess = 'Success';\n  let stateError = 'Error';\n  let formMsgSuccess = 'Thanks! We received your request'\n  let formMsgError = 'An error occurred on processing your request, try again!'\n\n  const idTrait = {\n    name: 'id',\n    label: c.labelTraitId,\n  };\n\n  const forTrait = {\n    name: 'for',\n    label: c.labelTraitFor,\n  };\n\n  const nameTrait = {\n    name: 'name',\n    label: c.labelTraitName,\n  };\n\n  const placeholderTrait = {\n    name: 'placeholder',\n    label: c.labelTraitPlaceholder,\n  };\n\n  const valueTrait = {\n    name: 'value',\n    label: c.labelTraitValue,\n  };\n\n  const requiredTrait = {\n    type: 'checkbox',\n    name: 'required',\n    label: c.labelTraitRequired,\n  };\n\n  const checkedTrait = {\n    label: c.labelTraitChecked,\n    type: 'checkbox',\n    name: 'checked',\n  };\n\n  const preventDefaultClick = () => {\n    return defaultType.view.extend({\n      events: {\n        'mousedown': 'handleClick',\n      },\n\n      handleClick(e) {\n        e.preventDefault();\n      },\n    });\n  };\n\n  domc.addType('form', {\n    model: defaultModel.extend({\n      defaults: {\n        ...defaultModel.prototype.defaults,\n        droppable: ':not(form)',\n        icon: `<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M19 3H5c-1.11 0-2 .89-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5a2 2 0 0 0-2-2m0 2v14H5V5h14z\"></path></svg>`,\n        attributes: { method: 'post', 'data-redirect': \"\" },\n        redirect: 'page',\n        draggable: ':not(form)',\n        traits: [{\n          label: c.labelTraitdefaultName,\n          placeholder: 'eg. Top Form',\n          name: 'name',\n        },{\n          type: 'select',\n          label: c.labelTraitMethod,\n          name: 'method',\n          options: [\n            {value: 'get', name: 'GET'},\n            {value: 'post', name: 'POST'},\n          ],\n        },{\n          label: c.labelTraitAction,\n          name: 'action',\n          placeholder: 'Webbuilder',\n        },{\n          type: 'select',\n          label: c.labelTraitState,\n          name: 'formState',\n          changeProp: 1,\n          options: [\n            {value: '', name: c.labelStateNormal},\n            {value: 'success', name: c.labelStateSuccess},\n            {value: 'error', name: c.labelStateError},\n          ]\n        }],\n      },\n\n      init() {\n        this.listenTo(this, 'change:formState', this.updateFormState);\n      },\n\n      updateFormState() {\n        var state = this.get('formState');\n        switch (state) {\n          case 'success':\n            this.showState('success');\n            break;\n          case 'error':\n            this.showState('error');\n            break;\n          default:\n            this.showState('normal');\n        }\n      },\n\n      showState(state) {\n        var st = state || 'normal';\n        var failVis, successVis;\n        if (st == 'success') {\n          failVis = 'none';\n          successVis = 'block';\n        } else if (st == 'error') {\n          failVis = 'block';\n          successVis = 'none';\n        } else {\n          failVis = 'none';\n          successVis = 'none';\n        }\n        var successModel = this.getStateModel('success');\n        var failModel = this.getStateModel('error');\n        var successStyle = successModel.getStyle();\n        var failStyle = failModel.getStyle();\n        successStyle.display = successVis;\n        failStyle.display = failVis;\n        successModel.setStyle(successStyle);\n        failModel.setStyle(failStyle);\n      },\n\n      getStateModel(state) {\n        var st = state || 'success';\n        var stateName = 'form-state-' + st;\n        var stateModel;\n        var comps = this.get('components');\n        for (var i = 0; i < comps.length; i++) {\n          var model = comps.models[i];\n          if(model.get('form-state-type') == st) {\n            stateModel = model;\n            break;\n          }\n        }\n        if (!stateModel) {\n          var contentStr = formMsgSuccess;\n          if(st == 'error') {\n            contentStr = formMsgError;\n          }\n          stateModel = comps.add({\n            'form-state-type': st,\n            type: 'text',\n            removable: false,\n            copyable: false,\n            draggable: false,\n            attributes: {'data-form-state': st, 'class': 'state-' + st},\n            content: contentStr,\n          });\n        }\n        return stateModel;\n      },\n    }, {\n      isComponent(el) {\n        if(el.tagName == 'FORM'){\n          return {type: 'form'};\n        }\n      },\n    }),\n\n    view: defaultView.extend({\n      events: {\n        submit(e) {\n          e.preventDefault();\n        }\n      }\n    }),\n  });\n\n\n\n\n\n  // INPUT\n  domc.addType('input', {\n    model: defaultModel.extend({\n      defaults: {\n        ...defaultModel.prototype.defaults,\n        name: c.labelInputName,\n        tagName: 'input',\n        icon: `<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M19 3H5c-1.11 0-2 .89-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5a2 2 0 0 0-2-2m0 2v14H5V5h14z\"></path></svg>`,\n        draggable: 'form, form *',\n        droppable: false,\n        traits: [\n          nameTrait,\n          placeholderTrait, {\n            label: c.labelTraitType,\n            type: 'select',\n            name: 'type',\n            options: [\n              {value: 'text', name: c.labelTypeText},\n              {value: 'email', name: c.labelTypeEmail},\n              {value: 'password', name: c.labelTypePassword},\n              {value: 'number', name: c.labelTypeNumber},\n            ]\n          }, requiredTrait\n        ],\n      },\n    }, {\n      isComponent(el) {\n        if(el.tagName == 'INPUT') {\n          return {type: 'input'};\n        }\n      },\n    }),\n    view: defaultView,\n  });\n\n  var inputType = domc.getType('input');\n  var inputModel = inputType.model;\n\n\n\n\n\n  // TEXTAREA\n  domc.addType('textarea', {\n    model: inputType.model.extend({\n      defaults: {\n        ...inputModel.prototype.defaults,\n        name: c.labelTextareaName,\n        icon: `<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M19 3H5c-1.11 0-2 .89-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5a2 2 0 0 0-2-2m0 2v14H5V5h14z\"></path></svg>`,\n        tagName: 'textarea',\n        traits: [\n          nameTrait,\n          placeholderTrait,\n          requiredTrait\n        ]\n      },\n    }, {\n      isComponent(el) {\n        if(el.tagName == 'TEXTAREA'){\n          return {type: 'textarea'};\n        }\n      },\n    }),\n    view: defaultView,\n  });\n\n\n\n\n\n  // SELECT\n  domc.addType('select', {\n    model: defaultModel.extend({\n      defaults: {\n        ...inputModel.prototype.defaults,\n        name: c.labelSelectName,\n        tagName: 'select',\n        icon: `<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M19 3H5c-1.11 0-2 .89-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5a2 2 0 0 0-2-2m0 2v14H5V5h14z\"></path></svg>`,\n        traits: [\n          nameTrait, {\n            label: c.labelTraitOptions,\n            type: 'select-options'\n          },\n          requiredTrait\n        ],\n      },\n    }, {\n      isComponent(el) {\n        if(el.tagName == 'SELECT'){\n          return {type: 'select'};\n        }\n      },\n    }),\n    view: preventDefaultClick(),\n  });\n\n\n\n\n\n  // CHECKBOX\n  domc.addType('checkbox', {\n    model: defaultModel.extend({\n      defaults: {\n        ...inputModel.prototype.defaults,\n        name: c.labelCheckboxName,\n        icon: `<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M19 3H5c-1.11 0-2 .89-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5a2 2 0 0 0-2-2m0 2v14H5V5h14z\"></path></svg>`,\n        copyable: false,\n        attributes: {type: 'checkbox'},\n        traits: [\n          idTrait,\n          nameTrait,\n          valueTrait,\n          requiredTrait,\n          checkedTrait\n        ],\n      },\n\n    }, {\n      isComponent(el) {\n        if (el.tagName == 'INPUT' && el.type == 'checkbox') {\n          return { type: 'checkbox' };\n        }\n      },\n    }),\n    view: defaultView.extend({\n      events: {\n        'click': 'handleClick',\n      },\n\n      handleClick(e) {\n        e.preventDefault();\n      },\n\n      init() {\n        this.listenTo(this.model, 'change:attributes:checked', this.handleChecked);\n      },\n\n      handleChecked() {\n        this.el.checked = !!this.model.get('attributes').checked;\n      },\n    }),\n  });\n\n  var checkType = domc.getType('checkbox');\n\n\n\n\n\n  // RADIO\n  domc.addType('radio', {\n     model: checkType.model.extend({\n       defaults: {\n         ...checkType.model.prototype.defaults,\n         icon: `<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M19 3H5c-1.11 0-2 .89-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5a2 2 0 0 0-2-2m0 2v14H5V5h14z\"></path></svg>`,\n         name: c.labelRadioName,\n         attributes: {type: 'radio'},\n       },\n     }, {\n       isComponent(el) {\n         if(el.tagName == 'INPUT' && el.type == 'radio'){\n           return {type: 'radio'};\n         }\n       },\n     }),\n     view: checkType.view,\n  });\n\n\n  domc.addType('button', {\n    extend: defaultModel,\n    isComponent: el => el.tagName == 'BUTTON',\n\n    model: {\n      defaults: {\n        tagName: 'button',\n        attributes: { type: 'button' },\n        text: 'Send',\n        traits: [\n          {\n            name: 'text',\n            changeProp: true,\n          }, {\n            type: 'select',\n            name: 'type',\n            options: [\n              { value: 'button' },\n              { value: 'submit' },\n              { value: 'reset' },\n            ]\n        }]\n      },\n\n      init() {\n        const comps = this.components();\n        const tChild =  comps.length === 1 && comps.models[0];\n        const chCnt = (tChild && tChild.is('textnode') && tChild.get('content')) || '';\n        const text = chCnt || this.get('text');\n        this.set({ text });\n        this.on('change:text', this.__onTextChange);\n        (text !== chCnt) && this.__onTextChange();\n      },\n\n      __onTextChange() {\n        this.components(this.get('text'));\n      },\n    },\n\n    view: {\n      events: {\n        click: e => e.preventDefault(),\n      },\n    },\n  });\n\n\n  // LABEL\n  domc.addType('label', {\n    model: textModel.extend({\n      defaults: {\n        ...textModel.prototype.defaults,\n        icon: `<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M19 3H5c-1.11 0-2 .89-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5a2 2 0 0 0-2-2m0 2v14H5V5h14z\"></path></svg>`,\n        name: c.labelNameLabel,\n        tagName: 'label',\n        traits: [forTrait],\n      },\n    }, {\n      isComponent(el) {\n        if(el.tagName == 'LABEL'){\n          return {type: 'label'};\n        }\n      },\n    }),\n    view: textView,\n  });\n\n\n  // form group\n  domc.addType('form group', {\n    model: {\n      defaults: {\n      icon: `<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M19 3H5c-1.11 0-2 .89-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5a2 2 0 0 0-2-2m0 2v14H5V5h14z\"></path></svg>`,\n      },\n    }\n  });\n}\n","import loadTraits from './traits';\nimport loadBlocks from './blocks';\nimport loadComponents from './components';\n\nexport default (editor, opts = {}) => {\n\n  const config = {\n    blocks: ['form', 'input', 'textarea', 'select',\n      'button', 'label', 'checkbox', 'radio'],\n    labelTraitMethod: 'Method',\n    labelTraitAction: 'Action',\n    labelTraitState: 'State',\n    labelTraitId: 'ID',\n    labelTraitFor: 'For',\n    labelInputName: 'Input',\n    labelTextareaName: 'Textarea',\n    labelSelectName: 'Select',\n    labelCheckboxName: 'Checkbox',\n    labelRadioName: 'Radio',\n    labelButtonName: 'Button',\n    labelTraitName: 'Name',\n    labelTraitPlaceholder: 'Placeholder',\n    labelTraitValue: 'Value',\n    labelTraitRequired: 'Required',\n    labelTraitType: 'Type',\n    labelTraitOptions: 'Options',\n    labelTraitChecked: 'Checked',\n    labelTypeText: 'Text',\n    labelTypeEmail: 'Email',\n    labelTypePassword: 'Password',\n    labelTypeNumber: 'Number',\n    labelTypeSubmit: 'Submit',\n    labelTypeReset: 'Reset',\n    labelTypeButton: 'Button',\n    labelNameLabel: 'Label',\n    labelForm: 'Form',\n    labelSelectOption: '- Select option -',\n    labelOption: 'Option',\n    labelStateNormal: 'Normal',\n    labelStateSuccess: 'Success',\n    labelTraitRedirect: 'Redirect',\n    labelStateError: 'Error',\n    category: 'Forms',\n    ...opts\n  };\n\n  loadComponents(editor, config);\n  loadTraits(editor, config);\n  loadBlocks(editor, config);\n};\n"],"sourceRoot":""}